import { assert } from 'chai';
import { toFormat } from '@/utils.js';

describe('utils.js tests', () => {
  describe('function toFormat', () => {
    const lte9Digits = [
      [1, '1', '1 WEI'],
      [2, '12', '12 WEI'],
      [3, '123', '123 WEI'],
      [4, '1234', '1234 WEI'],
      [5, '12345', '12345 WEI'],
      [6, '123456', '123456 WEI'],
      [7, '1234567', '1234567 WEI'],
      [8, '12345678', '12345678 WEI'],
      [9, '123456789', '123456789 WEI'],

      [2, '10', '10 WEI'],
      [3, '100', '100 WEI'],
      [4, '1000', '1000 WEI'],
      [5, '10000', '10000 WEI'],
      [6, '100000', '100000 WEI'],
      [7, '1000000', '1000000 WEI'],
      [8, '10000000', '10000000 WEI'],
      [9, '100000000', '100000000 WEI'],
    ];

    for (let i = 0; i < lte9Digits.length; i++)
      it('WEI tests, length: ' + lte9Digits[i][0], () => {
        assert.equal(
          toFormat(lte9Digits[i][1]),
          lte9Digits[i][2],
          ''
        );
      });

    const lte18Digits = [
      [10, '1234567891', '0.000000001 ETH'],
      [11, '12345678912', '0.000000012 ETH'],
      [12, '123456789123', '0.000000123 ETH'],
      [13, '1234567891234', '0.000001234 ETH'],
      [14, '12345678912345', '0.000012345 ETH'],
      [15, '123456789123456', '0.000123456 ETH'],
      [16, '1234567891234567', '0.001234567 ETH'],
      [17, '12345678912345678', '0.012345678 ETH'],
      [18, '123456789123456789', '0.123456789 ETH'],

      [10, '1000000000', '0.000000001 ETH'],
      [11, '10000000000', '0.00000001 ETH'],
      [12, '100000000000', '0.0000001 ETH'],
      [13, '1000000000000', '0.000001 ETH'],
      [14, '10000000000000', '0.00001 ETH'],
      [15, '100000000000000', '0.0001 ETH'],
      [16, '1000000000000000', '0.001 ETH'],
      [17, '10000000000000000', '0.01 ETH'],
      [18, '100000000000000000', '0.1 ETH'],
    ];

    for (let i = 0; i < lte18Digits.length; i++)
      it('WEI tests, length: ' + lte18Digits[i][0], () => {
        assert.equal(
          toFormat(lte18Digits[i][1]),
          lte18Digits[i][2],
          ''
        );
      });

    const gt18Digits = [
      [19, '1234567891234567891', '1.234567891 ETH'],
      [20, '12345678912345678912', '12.345678912 ETH'],
      [21, '123456789123456789123', '123.456789123 ETH'],

      [19, '1000000000000000000', '1 ETH'],
      [20, '10000000000000000000', '10 ETH'],
      [21, '100000000000000000000', '100 ETH'],

      [54, '123456789123456789123456789123456789123456789123456789', '123456789123456789123456789123456789.123456789 ETH'],
    ];

    for (let i = 0; i < gt18Digits.length; i++)
      it('WEI tests, length: ' + gt18Digits[i][0], () => {
        assert.equal(
          toFormat(gt18Digits[i][1]),
          gt18Digits[i][2],
          ''
        );
      });
  });
});
